{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","newText","split","join","length","Alert","capitalize","sometext","charAt","slice","alert","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d674e21.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/About\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className={`form-check form-switch text-${props.mode ==='dark' ? 'light':'dark'} mx-2`} >\r\n            <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode ==='dark' ? 'Light':'Dark'}Mode</label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Title comes here...\",\r\n    aboutText : \"About comes here...\",\r\n}","import React, { useState } from \"react\";\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  // setText(\"used handleUpClick\"); cannot use setText here\r\n  const handleUpClick = () => {\r\n    // console.log(\"click hua\")\r\n    setText(text.toUpperCase()); // can use setText here\r\n    props.showAlert(\"changed to uppercase\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"something changed\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleLowClick = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"changed to lowercase\", \"success\")\r\n  };\r\n  const handleClearText = ()=> {\r\n    setText(\"\");\r\n    props.showAlert(\"cleared text\", \"warning\")\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"copied to clipboard\", \"success\")\r\n  };\r\n  const handleSpaces = ()=> {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"removed extra spaces\", \"success\")\r\n  };\r\n  // styles\r\n  return (\r\n    <>\r\n      <div style = {{ color:props.mode ==='dark' ? 'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea value={text} className=\"form-control\" id=\"myBox\" onChange={handleOnChange} style = {{ backgroundColor:props.mode ==='dark' ? 'grey':'white',  color:props.mode ==='dark' ? 'white':'black'}} rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercases</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick = {handleClearText}>Clear</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick = {handleCopy}>Copy</button>\r\n        <button className=\"btn btn-primary\" onClick = {handleSpaces}>Remove Spaces</button>\r\n      </div>\r\n      <div className=\"container, my-3\" style = {{ color:props.mode ==='dark' ? 'white':'black'}}>\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          words = {text.split(\" \").length}, characters = {text.length}\r\n        </p>\r\n        <p>Time to read = {0.008 *((text === \"\")?0: text.split(\" \").length)}</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length === 0?'Please enter some text':text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (sometext)=>{\r\n        return sometext.charAt(0).toUpperCase() + sometext.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {capitalize(props.alert.msg)}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from 'react'\nimport Navbar from \"./components/Navbar.js\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#091c38';\n      showAlert(\"dark mode enabled\", \"success\")\n      document.title = \"textUtils - Dark Mode On\"\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode On\";\n    }\n  }\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg : message,\n        type : type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n    }\n  return (\n    \n    <>\n    {/* <Router> */}\n      <Navbar title={\"TextUtils\"} mode = {mode} aboutText=\"About Us\" toggleMode = {toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      {/* <Routes>\n          <Route path=\"/About\" element = {<About />}/>\n          <Route path=\"/\" element = {<TextForm heading = \"Enter text to analyze\" mode = {mode} showAlert ={showAlert}/>}/>\n        </Routes> */}\n          <TextForm heading = \"Enter text to analyze\" mode = {mode} showAlert ={showAlert}/>\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}